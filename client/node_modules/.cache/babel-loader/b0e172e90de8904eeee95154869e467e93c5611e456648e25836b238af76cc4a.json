{"ast":null,"code":"import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddlewar from 'redux-saga';\nimport rootSaga from './root-saga';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddlewar();\nconst middlewares = [sagaMiddleware];\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","logger","createSagaMiddlewar","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/NFT-collection/client/src/redux/store.js"],"sourcesContent":["import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddlewar from 'redux-saga';\n\nimport rootSaga from './root-saga';\n\nimport rootReducer from './root-reducer';\n\nconst sagaMiddleware = createSagaMiddlewar();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAC1E,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,mBAAmB,MAAM,YAAY;AAE5C,OAAOC,QAAQ,MAAM,aAAa;AAElC,OAAOC,WAAW,MAAM,gBAAgB;AAExC,MAAMC,cAAc,GAAGH,mBAAmB,CAAC,CAAC;AAE5C,MAAMI,WAAW,GAAG,CAACD,cAAc,CAAC;AAEpC,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EACxCH,WAAW,CAACI,IAAI,CAACT,MAAM,CAAC;AAC5B;AAEA,MAAMU,KAAK,GAAGZ,WAAW,CAACK,WAAW,EAAEJ,eAAe,CAAC,GAAGM,WAAW,CAAC,CAAC;AAEvED,cAAc,CAACO,GAAG,CAACT,QAAQ,CAAC;AAE5B,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}