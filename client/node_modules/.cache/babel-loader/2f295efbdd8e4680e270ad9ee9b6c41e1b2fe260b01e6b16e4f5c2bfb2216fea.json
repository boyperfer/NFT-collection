{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/pages/collection/collection.component.js\",\n  _s = $RefreshSig$();\nimport CardList from '../../components/card-list/card-list.component';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectNFTs } from '../../redux/nft/nft.selectors';\nimport { fetchNFTStart } from '../../redux/nft/nft.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const nfts = useSelector(selectNFTs);\n  const data = fetchNFTStart();\n  useEffect(() => {\n    dispatch(data);\n  }, [dispatch]);\n  console.log(nfts);\n  const collectionName = useParams();\n  const collections = useSelector(selectCollections);\n  return /*#__PURE__*/_jsxDEV(CardList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n_s(CollectionPage, \"TRroJKaazbbX+esI+DbputyDWkQ=\", false, function () {\n  return [useDispatch, useSelector, useParams, useSelector];\n});\n_c = CollectionPage;\nexport default CollectionPage;\nvar _c;\n$RefreshReg$(_c, \"CollectionPage\");","map":{"version":3,"names":["CardList","useParams","useSelector","useDispatch","selectNFTs","fetchNFTStart","jsxDEV","_jsxDEV","CollectionPage","_s","dispatch","nfts","data","useEffect","console","log","collectionName","collections","selectCollections","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/pages/collection/collection.component.js"],"sourcesContent":["import CardList from '../../components/card-list/card-list.component'\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {selectNFTs} from '../../redux/nft/nft.selectors';\nimport {fetchNFTStart} from '../../redux/nft/nft.actions';\n\nconst CollectionPage = () => {\n\tconst dispatch = useDispatch();\n\tconst nfts = useSelector(selectNFTs) \n\tconst data = fetchNFTStart()\n\tuseEffect(() => {\n\t\tdispatch(data)\n\t}, [dispatch]);\n\tconsole.log(nfts);\n\n\tconst collectionName = useParams();\n\tconst collections = useSelector(selectCollections) \n\treturn (\n\t\t<CardList />\n\t)\n};\nexport default CollectionPage;\n\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,gDAAgD;AACrE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAAQC,UAAU,QAAO,+BAA+B;AACxD,SAAQC,aAAa,QAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,IAAI,GAAGT,WAAW,CAACE,UAAU,CAAC;EACpC,MAAMQ,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5BQ,SAAS,CAAC,MAAM;IACfH,QAAQ,CAACE,IAAI,CAAC;EACf,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EACdI,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjB,MAAMK,cAAc,GAAGf,SAAS,CAAC,CAAC;EAClC,MAAMgB,WAAW,GAAGf,WAAW,CAACgB,iBAAiB,CAAC;EAClD,oBACCX,OAAA,CAACP,QAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEd,CAAC;AAACb,EAAA,CAdID,cAAc;EAAA,QACFL,WAAW,EACfD,WAAW,EAODD,SAAS,EACZC,WAAW;AAAA;AAAAqB,EAAA,GAV1Bf,cAAc;AAepB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}