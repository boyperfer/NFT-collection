{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/deposit-bank/deposit-bank.component.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-buttons/custom-button.component';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { TitleContainer, ButtonsContainer, DepositContainer } from './deposit-bank.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepositBank = () => {\n  _s();\n  const currentUser = useSelector(selectCurrentUser);\n  const {\n    trader_id\n  } = currentUser;\n  const [payment, setPayment] = useState({\n    amount: '',\n    paymentAddress: ''\n  });\n  const {\n    amount,\n    paymentAddress\n  } = payment;\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPayment({\n      ...payment,\n      [name]: value\n    });\n  };\n\n  // const handleSubmit = () => {\n  // \taxios.put(`http://localhost:3002/deposit/${trader_id}`, {amount, paymentAddress})\n  // \t\t.then(response => {\n  // \t\t\tconsole.log(response.data);\n  // \t\t\t// Handle success, e.g., show a success message to the user\n  // \t\t})\n  // \t\t.catch(error => {\n  // \t\t\tconsole.error('Error increasing amount:', error);\n  // \t\t\t// Handle error, e.g., show an error message to the user\n  // \t\t});\n  // };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event, 1);\n    // Send login request to the server\n    fetch(`http://localhost:3002/deposit/${trader_id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      if (data.success) {\n        const newUser = users[data.result[0].trader_id];\n        newUser['balance'] = data.result[0].balance;\n        newUser['ethereum_balance'] = data.result[0].ethereum_balance;\n        dispatch(setCurrentUser(newUser));\n        navigate('/');\n      } else {\n        alert(\"your username or password is incorrect\");\n      }\n      console.log(data.result[0].trader_id);\n      // Handle the login response accordingly\n      // For simplicity, just logging the response to the console\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DepositContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: \"Deposit by Bank transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        label: \"Payment Address\",\n        name: \"paymentAddress\",\n        type: \"text\",\n        value: paymentAddress,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        label: \"Amount\",\n        name: \"amount\",\n        type: \"text\",\n        value: amount,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n_s(DepositBank, \"S5eIegFx4UJ23fjjl+aAfP6kU8Y=\", false, function () {\n  return [useSelector];\n});\n_c = DepositBank;\nexport default DepositBank;\nvar _c;\n$RefreshReg$(_c, \"DepositBank\");","map":{"version":3,"names":["useState","axios","useDispatch","useSelector","FormInput","CustomButton","selectCurrentUser","TitleContainer","ButtonsContainer","DepositContainer","jsxDEV","_jsxDEV","DepositBank","_s","currentUser","trader_id","payment","setPayment","amount","paymentAddress","handleChange","event","name","value","target","handleSubmit","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","username","password","then","response","json","data","success","newUser","users","result","balance","ethereum_balance","dispatch","setCurrentUser","navigate","alert","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","required","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/deposit-bank/deposit-bank.component.js"],"sourcesContent":["import {useState} from 'react';\nimport axios from 'axios';\nimport {useDispatch, useSelector} from 'react-redux';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-buttons/custom-button.component';\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\nimport {TitleContainer, ButtonsContainer, DepositContainer} from './deposit-bank.styles';\n\nconst DepositBank = () => {\n\tconst currentUser = useSelector(selectCurrentUser);\n\tconst {trader_id} = currentUser;\n\n\tconst [payment, setPayment] = useState({\n\t\tamount: '',\n\t\tpaymentAddress: '',\n\t});\n\n\tconst {amount, paymentAddress} = payment;\n\n\tconst handleChange = event => {\n\t\tconst {name, value} = event.target;\n\t\tsetPayment({...payment, [name]: value});\n\t};\n\n\t// const handleSubmit = () => {\n\t// \taxios.put(`http://localhost:3002/deposit/${trader_id}`, {amount, paymentAddress})\n\t// \t\t.then(response => {\n\t// \t\t\tconsole.log(response.data);\n\t// \t\t\t// Handle success, e.g., show a success message to the user\n\t// \t\t})\n\t// \t\t.catch(error => {\n\t// \t\t\tconsole.error('Error increasing amount:', error);\n\t// \t\t\t// Handle error, e.g., show an error message to the user\n\t// \t\t});\n\t// };\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tconsole.log(event, 1);\n\t\t// Send login request to the server\n\t\tfetch(`http://localhost:3002/deposit/${trader_id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({username, password}),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data)\n\t\t\t\tif(data.success) {\n\t\t\t\t\tconst newUser = users[data.result[0].trader_id]\n\t\t\t\t\tnewUser['balance'] = data.result[0].balance\n\t\t\t\t\tnewUser['ethereum_balance'] = data.result[0].ethereum_balance\n\t\t\t\t\tdispatch(setCurrentUser(newUser))\t\n\t\t\t\t\tnavigate('/')\n\t\t\t\t} else {\n\t\t\t\t\talert(\"your username or password is incorrect\")\n\t\t\t\t}\n\t\t\t\tconsole.log(data.result[0].trader_id);\n\t\t\t\t// Handle the login response accordingly\n\t\t\t\t// For simplicity, just logging the response to the console\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t};\n\treturn (\n\t\t<DepositContainer>\n\t\t\t<TitleContainer>\n\t\t\t\tDeposit by Bank transfer\n\t\t\t</TitleContainer>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel='Payment Address'\n\t\t\t\t\tname='paymentAddress'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={paymentAddress}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel='Amount'\n\t\t\t\t\tname='amount'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={amount}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t<CustomButton type='submit'>Submit</CustomButton>\n\t\t\t\t</ButtonsContainer>\n\t\t\t</form>\n\t\t</DepositContainer>\n\t);\n};\n\nexport default DepositBank;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}