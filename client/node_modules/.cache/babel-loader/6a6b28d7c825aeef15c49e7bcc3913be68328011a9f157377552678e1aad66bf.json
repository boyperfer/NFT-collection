{"ast":null,"code":"import { takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { fetchTransactionSuccess, fetchTransactionFailure } from './transaction.actions';\nimport TransactionActionTypes from './transaction.types';\nfunction* fetchTransaction() {\n  try {\n    const instance = axios.create({\n      baseURL: 'http://localhost:3002' // Set your desired port here\n    });\n\n    const transactions = yield call(instance.get, '/api/getTransactions'); // Adjust the API endpoint as needed\n    console.log(transactions.data);\n    yield put(fetchTransactionSuccess(transactions.data));\n  } catch (error) {\n    yield put(fetchTransactionFailure(error.message));\n  }\n}\nexport function* fetchTransactionAsync() {\n  yield takeLatest(TransactionActionTypes.FETCH_TRANSACTION_START, fetchTransaction);\n}","map":{"version":3,"names":["takeLatest","put","call","axios","fetchTransactionSuccess","fetchTransactionFailure","TransactionActionTypes","fetchTransaction","instance","create","baseURL","transactions","get","console","log","data","error","message","fetchTransactionAsync","FETCH_TRANSACTION_START"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/redux/transaction/transaction.sagas.js"],"sourcesContent":["import {takeLatest, put, call} from 'redux-saga/effects';\nimport axios from 'axios';\nimport { fetchTransactionSuccess, fetchTransactionFailure } from './transaction.actions';\nimport TransactionActionTypes from './transaction.types';\n\nfunction * fetchTransaction() {\n\ttry {\n\t\tconst instance = axios.create({\n\t\t\tbaseURL: 'http://localhost:3002', // Set your desired port here\n\t\t});\n\t\tconst transactions = yield call(instance.get, '/api/getTransactions'); // Adjust the API endpoint as needed\n\t\tconsole.log(transactions.data)\n\t\tyield put(fetchTransactionSuccess(transactions.data));\n\t} catch (error) {\n\t\tyield put(fetchTransactionFailure(error.message));\n\t}\n}\n\nexport function * fetchTransactionAsync() {\n\tyield takeLatest(TransactionActionTypes.FETCH_TRANSACTION_START, fetchTransaction);\n}\n\n\n\n"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAO,oBAAoB;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,uBAAuB,EAAEC,uBAAuB,QAAQ,uBAAuB;AACxF,OAAOC,sBAAsB,MAAM,qBAAqB;AAExD,UAAWC,gBAAgBA,CAAA,EAAG;EAC7B,IAAI;IACH,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAC;MAC7BC,OAAO,EAAE,uBAAuB,CAAE;IACnC,CAAC,CAAC;;IACF,MAAMC,YAAY,GAAG,MAAMT,IAAI,CAACM,QAAQ,CAACI,GAAG,EAAE,sBAAsB,CAAC,CAAC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAACH,YAAY,CAACI,IAAI,CAAC;IAC9B,MAAMd,GAAG,CAACG,uBAAuB,CAACO,YAAY,CAACI,IAAI,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACf,MAAMf,GAAG,CAACI,uBAAuB,CAACW,KAAK,CAACC,OAAO,CAAC,CAAC;EAClD;AACD;AAEA,OAAO,UAAWC,qBAAqBA,CAAA,EAAG;EACzC,MAAMlB,UAAU,CAACM,sBAAsB,CAACa,uBAAuB,EAAEZ,gBAAgB,CAAC;AACnF"},"metadata":{},"sourceType":"module","externalDependencies":[]}