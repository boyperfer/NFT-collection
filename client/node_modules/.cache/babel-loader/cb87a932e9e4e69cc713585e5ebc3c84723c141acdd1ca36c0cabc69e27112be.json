{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/pages/collection/collection.component.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchNFTStart } from '../../redux/nft/nft.actions';\nimport { selectNFTs } from '../../redux/nft/nft.selectors';\nimport { selectCollections } from '../../redux/collection/collection.selectors';\nimport CardList from '../../components/card-list/card-list.component';\nimport { getCollectionIDByName } from '../../redux/collection/collection.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPage = () => {\n  _s();\n  const collectionName = useParams().collectionName;\n  const collections = useSelector(selectCollections);\n  const nfts = useSelector(selectNFTs);\n  const dispatch = useDispatch();\n  const [filteredNFTs, setFilterNFTs] = useState(nfts);\n  useEffect(() => {\n    dispatch(fetchNFTStart());\n  }, [dispatch]);\n  useEffect(() => {\n    const newFilteredNFTs = nfts.filter(nft => nft.collection_id == getCollectionIDByName(collections, collectionName));\n    setFilterNFTs(newFilteredNFTs);\n  }, [nfts, collectionName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardList, {\n      nfts: filteredNFTs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChangeHandler: onSearchChange,\n      placeholder: \"search monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n_s(CollectionPage, \"7uvL9AsFDtaiyrKtHO1xqW2Rphw=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch];\n});\n_c = CollectionPage;\nexport default CollectionPage;\nvar _c;\n$RefreshReg$(_c, \"CollectionPage\");","map":{"version":3,"names":["useEffect","useState","useParams","useSelector","useDispatch","fetchNFTStart","selectNFTs","selectCollections","CardList","getCollectionIDByName","jsxDEV","_jsxDEV","CollectionPage","_s","collectionName","collections","nfts","dispatch","filteredNFTs","setFilterNFTs","newFilteredNFTs","filter","nft","collection_id","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchBox","className","onChangeHandler","onSearchChange","placeholder","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/pages/collection/collection.component.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchNFTStart} from '../../redux/nft/nft.actions';\nimport {selectNFTs} from '../../redux/nft/nft.selectors';\nimport {selectCollections} from '../../redux/collection/collection.selectors';\nimport CardList from '../../components/card-list/card-list.component';\nimport {getCollectionIDByName} from '../../redux/collection/collection.utils';\n\nconst CollectionPage = () => {\n\tconst collectionName = useParams().collectionName;\n\tconst collections = useSelector(selectCollections);\n\tconst nfts = useSelector(selectNFTs);\n\tconst dispatch = useDispatch();\n\tconst [filteredNFTs, setFilterNFTs] = useState(nfts);\n\tuseEffect(() => {\n\t\tdispatch(fetchNFTStart());\n\t}, [dispatch]);\n\n\t  useEffect(() => {\n\t\tconst newFilteredNFTs = nfts.filter(nft => nft.collection_id == getCollectionIDByName(collections, collectionName));\n\n\t\tsetFilterNFTs(newFilteredNFTs);\n\t}, [nfts, collectionName]);\n\n\treturn (\n\t\t<div>\n\t\t\t<CardList nfts={filteredNFTs} />\n\t\t\t<SearchBox\n\t\t\tclassName='monsters-search-box'\n\t\t\tonChangeHandler={onSearchChange}\n\t\t\tplaceholder='search monsters'\n\t\t\t  />\n\t\t</div>\n\t);\n};\n\nexport default CollectionPage;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,aAAa,QAAO,6BAA6B;AACzD,SAAQC,UAAU,QAAO,+BAA+B;AACxD,SAAQC,iBAAiB,QAAO,6CAA6C;AAC7E,OAAOC,QAAQ,MAAM,gDAAgD;AACrE,SAAQC,qBAAqB,QAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,cAAc,GAAGZ,SAAS,CAAC,CAAC,CAACY,cAAc;EACjD,MAAMC,WAAW,GAAGZ,WAAW,CAACI,iBAAiB,CAAC;EAClD,MAAMS,IAAI,GAAGb,WAAW,CAACG,UAAU,CAAC;EACpC,MAAMW,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,YAAY,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAACe,IAAI,CAAC;EACpDhB,SAAS,CAAC,MAAM;IACfiB,QAAQ,CAACZ,aAAa,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACY,QAAQ,CAAC,CAAC;EAEZjB,SAAS,CAAC,MAAM;IACjB,MAAMoB,eAAe,GAAGJ,IAAI,CAACK,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,aAAa,IAAId,qBAAqB,CAACM,WAAW,EAAED,cAAc,CAAC,CAAC;IAEnHK,aAAa,CAACC,eAAe,CAAC;EAC/B,CAAC,EAAE,CAACJ,IAAI,EAAEF,cAAc,CAAC,CAAC;EAE1B,oBACCH,OAAA;IAAAa,QAAA,gBACCb,OAAA,CAACH,QAAQ;MAACQ,IAAI,EAAEE;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCjB,OAAA,CAACkB,SAAS;MACVC,SAAS,EAAC,qBAAqB;MAC/BC,eAAe,EAAEC,cAAe;MAChCC,WAAW,EAAC;IAAiB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAER,CAAC;AAACf,EAAA,CA1BID,cAAc;EAAA,QACIV,SAAS,EACZC,WAAW,EAClBA,WAAW,EACPC,WAAW;AAAA;AAAA8B,EAAA,GAJvBtB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}