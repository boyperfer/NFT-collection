{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/card/card.component.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useState } from 'react';\nimport { buyNFT } from '../../redux/nft/nft.actions';\nimport { selectCollections } from '../../redux/collection/collection.selectors';\nimport { getNameByCollectionID } from '../../redux/collection/collection.utils';\nimport { selectIsSignIn } from '../../redux/user/user.selectors';\nimport { AddButton, CardContainer, TextContainer } from './card.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  nft\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    token_id,\n    url_image,\n    collection_id,\n    price\n  } = nft;\n  const location = useLocation();\n  const collections = useSelector(selectCollections);\n  const name = getNameByCollectionID(collections, collection_id);\n  const isSignin = useSelector(selectIsSignIn);\n  const [ethereumPrice, setEthereumPrice] = useState('');\n  useEffect(() => {\n    const apiUrl = 'https://api.coinbase.com/v2/prices/ETH-USD/spot';\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      setEthereumPrice(data.amount);\n    }).catch(error => {\n      console.error('Error fetching Ethereum price:', error);\n    });\n  }, []);\n  console.log(ethereumPrice);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: `NFT ${token_id}`,\n      src: `${url_image}`,\n      height: \"auto\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [name, \" \", token_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), location.pathname == '/profile' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [\" \", price, \" ETH \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n        children: [\" \", price, \" USD \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(AddButton, {\n      onClick: () => {\n        if (isSignin) {\n          dispatch(buyNFT(nft));\n          navigate('/checkout');\n        } else {\n          alert('Please Sign In');\n        }\n      },\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n_s(Card, \"OmdXjUNxCZ7fP4X1IRL8nRQDqpY=\", false, function () {\n  return [useDispatch, useNavigate, useLocation, useSelector, useSelector];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useSelector","useDispatch","useLocation","useNavigate","useState","buyNFT","selectCollections","getNameByCollectionID","selectIsSignIn","AddButton","CardContainer","TextContainer","jsxDEV","_jsxDEV","Card","nft","_s","dispatch","navigate","token_id","url_image","collection_id","price","location","collections","name","isSignin","ethereumPrice","setEthereumPrice","useEffect","apiUrl","fetch","then","response","json","data","amount","catch","error","console","log","children","alt","src","height","width","fileName","_jsxFileName","lineNumber","columnNumber","pathname","onClick","alert","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/card/card.component.js"],"sourcesContent":["import {useSelector, useDispatch} from 'react-redux';\nimport {useLocation, useNavigate} from 'react-router';\nimport {useState} from 'react';\nimport {buyNFT} from '../../redux/nft/nft.actions';\nimport {selectCollections} from '../../redux/collection/collection.selectors';\nimport {getNameByCollectionID} from '../../redux/collection/collection.utils';\nimport {selectIsSignIn} from '../../redux/user/user.selectors';\nimport {AddButton, CardContainer, TextContainer} from './card.styles';\n\nconst Card = ({nft}) => {\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\tconst {token_id, url_image, collection_id, price} = nft;\n\tconst location = useLocation();\n\tconst collections = useSelector(selectCollections);\n\tconst name = getNameByCollectionID(collections, collection_id);\n\tconst isSignin = useSelector(selectIsSignIn);\n\tconst [ethereumPrice, setEthereumPrice] = useState('');\n\tuseEffect(() => {\n\t\tconst apiUrl = 'https://api.coinbase.com/v2/prices/ETH-USD/spot';\n\t\tfetch(apiUrl)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tsetEthereumPrice(data.amount);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error fetching Ethereum price:', error);\n\t\t\t});\n\t}, []);\n\n\tconsole.log(ethereumPrice);\n\treturn (\n\t\t<CardContainer>\n\t\t\t<img\n\t\t\t\talt={`NFT ${token_id}`}\n\t\t\t\tsrc={`${url_image}`}\n\t\t\t\theight = 'auto'\n\t\t\t\twidth = '100%'\n\t\t\t/>\n\t\t\t<h2>{name} {token_id}</h2>\n\t\t\t{\n\t\t\t\tlocation.pathname == '/profile'\n\t\t\t\t\t? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<TextContainer> {price} ETH </TextContainer>\n\t\t\t\t\t\t\t<TextContainer> {price} USD </TextContainer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t\t: <AddButton onClick={() => {\n\t\t\t\t\t\tif (isSignin) {\n\t\t\t\t\t\t\tdispatch(buyNFT(nft));\n\t\t\t\t\t\t\tnavigate('/checkout');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert('Please Sign In');\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>Buy</AddButton>\n\n\t\t\t}\n\t\t</CardContainer>\n\t);\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}