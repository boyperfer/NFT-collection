{"ast":null,"code":"export const getCollectionNameByContract = (collections, contract) => {\n  let result = '';\n  for (const collection of collections) {\n    if (collection.contract_address == contract) {\n      console.log(12);\n      result = collection.collection_name;\n    }\n  }\n  return result;\n};\nexport const getContractByID = (collections, id) => {\n  let result = '';\n  for (const collection of collections) {\n    if (collection.collection_id == id) {\n      result = collection.contract_address;\n    }\n  }\n  return result;\n};\nexport const getCollectionIDByName = (collections, name) => {\n  let result = '';\n  for (const collection of collections) {\n    if (collection.collection_name == name) {\n      result = collection.collection_id;\n    }\n  }\n  return result;\n};\nexport const getNameByCollectionID = (collections, id) => {\n  let result = '';\n  for (const collection of collections) {\n    if (collection.collection_id == id) {\n      result = collection.collection_name;\n    }\n  }\n  return result;\n};\nexport const shortenAddress = address => {\n  const prefixLength = 6;\n  const suffixLength = 4;\n  if (address.length <= prefixLength + suffixLength) {\n    return address; // No need to shorten\n  }\n\n  const prefix = address.slice(0, Math.max(0, prefixLength));\n  const suffix = address.slice(Math.max(0, address.length - suffixLength));\n  return `${prefix}...${suffix}`;\n};","map":{"version":3,"names":["getCollectionNameByContract","collections","contract","result","collection","contract_address","console","log","collection_name","getContractByID","id","collection_id","getCollectionIDByName","name","getNameByCollectionID","shortenAddress","address","prefixLength","suffixLength","length","prefix","slice","Math","max","suffix"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/redux/collection/collection.utils.js"],"sourcesContent":["export const getCollectionNameByContract = (collections, contract) => {\n\tlet result = '';\n\tfor (const collection of collections) {\n\t\tif (collection.contract_address == contract) {\n\t\t\tconsole.log(12);\n\t\t\tresult = collection.collection_name;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport const getContractByID = (collections, id) => {\n\tlet result = '';\n\tfor (const collection of collections) {\n\t\tif (collection.collection_id == id) {\n\t\t\tresult = collection.contract_address;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport const getCollectionIDByName = (collections, name) => {\n\tlet result = '';\n\tfor (const collection of collections) {\n\t\tif (collection.collection_name == name) {\n\t\t\tresult = collection.collection_id;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport const getNameByCollectionID = (collections, id) => {\n\tlet result = '';\n\tfor (const collection of collections) {\n\t\tif (collection.collection_id == id) {\n\t\t\tresult = collection.collection_name;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport const shortenAddress = (address) => {\n\tconst prefixLength = 6;\n\tconst suffixLength = 4;\n\n\tif (address.length <= prefixLength + suffixLength) {\n\t\treturn address; // No need to shorten\n\t}\n\n\tconst prefix = address.slice(0, Math.max(0, prefixLength));\n\tconst suffix = address.slice(Math.max(0, address.length - suffixLength));\n\n\treturn `${prefix}...${suffix}`;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,2BAA2B,GAAGA,CAACC,WAAW,EAAEC,QAAQ,KAAK;EACrE,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,MAAMC,UAAU,IAAIH,WAAW,EAAE;IACrC,IAAIG,UAAU,CAACC,gBAAgB,IAAIH,QAAQ,EAAE;MAC5CI,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;MACfJ,MAAM,GAAGC,UAAU,CAACI,eAAe;IACpC;EACD;EAEA,OAAOL,MAAM;AACd,CAAC;AAED,OAAO,MAAMM,eAAe,GAAGA,CAACR,WAAW,EAAES,EAAE,KAAK;EACnD,IAAIP,MAAM,GAAG,EAAE;EACf,KAAK,MAAMC,UAAU,IAAIH,WAAW,EAAE;IACrC,IAAIG,UAAU,CAACO,aAAa,IAAID,EAAE,EAAE;MACnCP,MAAM,GAAGC,UAAU,CAACC,gBAAgB;IACrC;EACD;EAEA,OAAOF,MAAM;AACd,CAAC;AAED,OAAO,MAAMS,qBAAqB,GAAGA,CAACX,WAAW,EAAEY,IAAI,KAAK;EAC3D,IAAIV,MAAM,GAAG,EAAE;EACf,KAAK,MAAMC,UAAU,IAAIH,WAAW,EAAE;IACrC,IAAIG,UAAU,CAACI,eAAe,IAAIK,IAAI,EAAE;MACvCV,MAAM,GAAGC,UAAU,CAACO,aAAa;IAClC;EACD;EAEA,OAAOR,MAAM;AACd,CAAC;AAED,OAAO,MAAMW,qBAAqB,GAAGA,CAACb,WAAW,EAAES,EAAE,KAAK;EACzD,IAAIP,MAAM,GAAG,EAAE;EACf,KAAK,MAAMC,UAAU,IAAIH,WAAW,EAAE;IACrC,IAAIG,UAAU,CAACO,aAAa,IAAID,EAAE,EAAE;MACnCP,MAAM,GAAGC,UAAU,CAACI,eAAe;IACpC;EACD;EAEA,OAAOL,MAAM;AACd,CAAC;AAED,OAAO,MAAMY,cAAc,GAAIC,OAAO,IAAK;EAC1C,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAMC,YAAY,GAAG,CAAC;EAEtB,IAAIF,OAAO,CAACG,MAAM,IAAIF,YAAY,GAAGC,YAAY,EAAE;IAClD,OAAOF,OAAO,CAAC,CAAC;EACjB;;EAEA,MAAMI,MAAM,GAAGJ,OAAO,CAACK,KAAK,CAAC,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,YAAY,CAAC,CAAC;EAC1D,MAAMO,MAAM,GAAGR,OAAO,CAACK,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,OAAO,CAACG,MAAM,GAAGD,YAAY,CAAC,CAAC;EAExE,OAAQ,GAAEE,MAAO,MAAKI,MAAO,EAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}