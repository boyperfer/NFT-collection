{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/nft-checkout/nft-checkout.component.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { getContractByID, getNameByCollectionID, shortenAddress } from '../../redux/collection/collection.utils';\nimport { selectCollections } from '../../redux/collection/collection.selectors';\nimport { selectNFTtoBuy } from '../../redux/nft/nft.selectors';\nimport { selectUsers } from '../../redux/user/user.selectors';\nimport Header from '../../components/header/header.component';\nimport { NFTContainer, NFTHeader, NFTContent, NFTDetail, TextContainer } from './nft-checkout.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTCheckout = () => {\n  _s();\n  //  F7c7a2d4-f786-41cc-abb1-8a23a2402da4\n  const nftTobuy = useSelector(selectNFTtoBuy);\n  const collections = useSelector(selectCollections);\n  const users = useSelector(selectUsers);\n  const currency = 'usd';\n  const apiUrl = `https://api.coincap.io/v2/assets/ethereum?convert=${currency}`;\n  fetch(apiUrl).then(response => response.json()).then(data => {\n    const ethereumPrice = data.data.priceUsd;\n    ethereumPrice.textContent = `${ethereumPrice} ${currency.toUpperCase()}`;\n  }).catch(error => {\n    console.error('Error fetching Ethereum price:', error);\n    ethereumPrice.textContent = 'Error fetching price';\n  });\n  const {\n    price,\n    token_id,\n    url_image,\n    collection_id,\n    ownership_id\n  } = nftTobuy;\n  const name = getNameByCollectionID(collections, collection_id);\n  const contract = getContractByID(collections, collection_id);\n  const addr = shortenAddress(contract);\n  const {\n    first_name,\n    last_name\n  } = users[ownership_id];\n  return /*#__PURE__*/_jsxDEV(NFTContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NFTHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: `NFT ${token_id}`,\n        src: `${url_image}`,\n        height: \"auto\",\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NFTContent, {\n      children: /*#__PURE__*/_jsxDEV(NFTDetail, {\n        children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), \" \", name, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Token :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), \" \", token_id, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"contract :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), \" \", addr, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), \" \", price, \" ETH  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Owner :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), \" \", first_name, \" \", last_name, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(NFTCheckout, \"EtfK9D8DbKNFM4V2hpoD4SzS9Tk=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = NFTCheckout;\nexport default NFTCheckout;\nvar _c;\n$RefreshReg$(_c, \"NFTCheckout\");","map":{"version":3,"names":["useSelector","getContractByID","getNameByCollectionID","shortenAddress","selectCollections","selectNFTtoBuy","selectUsers","Header","NFTContainer","NFTHeader","NFTContent","NFTDetail","TextContainer","jsxDEV","_jsxDEV","NFTCheckout","_s","nftTobuy","collections","users","currency","apiUrl","fetch","then","response","json","data","ethereumPrice","priceUsd","textContent","toUpperCase","catch","error","console","price","token_id","url_image","collection_id","ownership_id","name","contract","addr","first_name","last_name","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","height","width","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/nft-checkout/nft-checkout.component.js"],"sourcesContent":["import {useSelector} from 'react-redux';\nimport {getContractByID, getNameByCollectionID, shortenAddress} from '../../redux/collection/collection.utils';\nimport {selectCollections} from '../../redux/collection/collection.selectors';\nimport {selectNFTtoBuy} from '../../redux/nft/nft.selectors';\nimport {selectUsers} from '../../redux/user/user.selectors';\nimport Header from '../../components/header/header.component';\nimport {NFTContainer, NFTHeader, NFTContent, NFTDetail, TextContainer} from './nft-checkout.styles';\n\nconst NFTCheckout = () => {\n\t//  F7c7a2d4-f786-41cc-abb1-8a23a2402da4\n\tconst nftTobuy = useSelector(selectNFTtoBuy);\n\tconst collections = useSelector(selectCollections);\n\tconst users = useSelector(selectUsers);\n\n\tconst currency = 'usd';\n\n\tconst apiUrl = `https://api.coincap.io/v2/assets/ethereum?convert=${currency}`;\n\n\tfetch(apiUrl)\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t\tconst ethereumPrice = data.data.priceUsd;\n\t\t\tethereumPrice.textContent = `${ethereumPrice} ${currency.toUpperCase()}`;\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error fetching Ethereum price:', error);\n\t\t\tethereumPrice.textContent = 'Error fetching price';\n\t\t});\n\n\tconst {price, token_id, url_image, collection_id, ownership_id} = nftTobuy;\n\tconst name = getNameByCollectionID(collections, collection_id);\n\tconst contract = getContractByID(collections, collection_id);\n\tconst addr = shortenAddress(contract);\n\tconst {first_name, last_name} = users[ownership_id];\n\treturn (\n\t\t<NFTContainer>\n\t\t\t<Header/>\n\t\t\t<NFTHeader>\n\t\t\t\t<img\n\t\t\t\t\talt={`NFT ${token_id}`}\n\t\t\t\t\tsrc={`${url_image}`}\n\t\t\t\t\theight = 'auto'\n\t\t\t\t\twidth = '100%'\n\t\t\t\t/>\n\t\t\t</NFTHeader>\n\t\t\t<NFTContent>\n\t\t\t\t<NFTDetail>\n\t\t\t\t\t<TextContainer><strong>Name :</strong> {name}  </TextContainer>\n\t\t\t\t\t<TextContainer><strong>Token :</strong> {token_id}  </TextContainer>\n\t\t\t\t\t<TextContainer><strong>contract :</strong> {addr}  </TextContainer>\n\t\t\t\t\t<TextContainer><strong>Price :</strong> {price} ETH  </TextContainer>\n\t\t\t\t\t<TextContainer><strong>Owner :</strong> {first_name} {last_name}  </TextContainer>\n\t\t\t\t</NFTDetail>\n\t\t\t</NFTContent>\n\t\t</NFTContainer>\n\t);\n};\n\nexport default NFTCheckout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}