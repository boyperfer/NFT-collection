{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/pages/transaction/transaction.page.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../../components/header/header.component';\nimport { fetchNFTTransactionStart } from '../../redux/transaction/transaction.actions';\nimport { selectNFTTransactions } from '../../redux/transaction/transaction.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { shortenAddress, getCentralTime } from '../../utils';\nimport { TransactionContainer, HeaderContainer, TypeContainer, DateContainer, TableContainer, AmountContainer, TransferContainer, MoneyContainer } from './transaction-page.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchNFTTransactionStart());\n  }, [dispatch]);\n  const transactions = useSelector(selectNFTTransactions);\n  const currentUser = useSelector(selectCurrentUser);\n  console.log(transactions);\n  const filteredTransactions = transactions.filter(transaction => transaction.buyer === currentUser.trader_id);\n  return /*#__PURE__*/_jsxDEV(TransactionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), filteredTransactions.map(({\n      payment_type,\n      amount_paid,\n      payment_date,\n      payment_address\n    }, i) => /*#__PURE__*/_jsxDEV(TransferContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TypeContainer, {\n          children: [\"Deposit via \", payment_type, \" \", shortenAddress(payment_address)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(DateContainer, {\n          children: getCentralTime(payment_date).slice(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(AmountContainer, {\n        children: /*#__PURE__*/_jsxDEV(MoneyContainer, {\n          children: payment_type == \"Bank Transfer\" ? `$${amount_paid} USD` : `${amount_paid} ETH`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionPage, \"PyHvivT3lnOm5kIcYXY+6qebDCU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = TransactionPage;\nexport default TransactionPage;\nvar _c;\n$RefreshReg$(_c, \"TransactionPage\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Header","fetchNFTTransactionStart","selectNFTTransactions","selectCurrentUser","shortenAddress","getCentralTime","TransactionContainer","HeaderContainer","TypeContainer","DateContainer","TableContainer","AmountContainer","TransferContainer","MoneyContainer","jsxDEV","_jsxDEV","TransactionPage","_s","dispatch","transactions","currentUser","console","log","filteredTransactions","filter","transaction","buyer","trader_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","payment_type","amount_paid","payment_date","payment_address","i","slice","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/pages/transaction/transaction.page.js"],"sourcesContent":["import React, {useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport Header from '../../components/header/header.component';\nimport {fetchNFTTransactionStart} from '../../redux/transaction/transaction.actions';\nimport {selectNFTTransactions} from '../../redux/transaction/transaction.selectors';\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\nimport { shortenAddress, getCentralTime } from '../../utils';\n\nimport {\n\tTransactionContainer,\n\tHeaderContainer,\n\tTypeContainer,\n\tDateContainer,\n\tTableContainer,\n\tAmountContainer,\n\tTransferContainer,\n\tMoneyContainer\n} from './transaction-page.styles';\n\nconst TransactionPage = () => {\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tdispatch(fetchNFTTransactionStart())\n\t}, [dispatch]);\n\n\tconst transactions = useSelector(selectNFTTransactions)\t\n\tconst currentUser = useSelector(selectCurrentUser)\n\tconsole.log(transactions)\n\n\tconst filteredTransactions = transactions.filter(transaction => transaction.buyer === currentUser.trader_id);\n\n    return (\n        <TransactionContainer>\n\t\t\t<Header/>\n\t\t\t<HeaderContainer>Transaction History</HeaderContainer>\n\t\t{\n\t\t\tfilteredTransactions.map(({payment_type, amount_paid, payment_date, payment_address}, i) => ( \n\t\t\t\t<TransferContainer>\n\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t<TypeContainer>Deposit via {payment_type} {shortenAddress(payment_address)}</TypeContainer>\n\t\t\t\t\t\t<DateContainer>{getCentralTime(payment_date).slice(0,10)}</DateContainer>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t\t<AmountContainer>\n\t\t\t\t\t\t<MoneyContainer>{payment_type == \"Bank Transfer\" ? `$${amount_paid} USD` : `${amount_paid} ETH`}</MoneyContainer>\n\t\t\t\t\t</AmountContainer>\n\t\t\t\t</TransferContainer>\n\t\t\t))\n\t\t}\n        </TransactionContainer>\n)}\n\n\nexport default TransactionPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}