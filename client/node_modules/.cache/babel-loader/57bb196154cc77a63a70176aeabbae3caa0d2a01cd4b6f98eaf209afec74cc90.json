{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/nft-checkout/nft-checkout.component.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { getContractByID, getNameByCollectionID, shortenAddress } from '../../redux/collection/collection.utils';\nimport { selectCollections } from '../../redux/collection/collection.selectors';\nimport { selectNFTtoBuy } from '../../redux/nft/nft.selectors';\nimport { NFTContainer, NFTHeader, NFTContent, NFTDetail, TextContainer } from './nft-checkout.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTCheckout = () => {\n  _s();\n  const nftTobuy = useSelector(selectNFTtoBuy);\n  const collections = useSelector(selectCollections);\n  const {\n    price,\n    token_id,\n    url_image,\n    collection_id,\n    ownership_id\n  } = nftTobuy;\n  const name = getNameByCollectionID(collections, collection_id);\n  const contract = getContractByID(collections, collection_id);\n  const addr = shortenAddress(contract);\n  return /*#__PURE__*/_jsxDEV(NFTContainer, {\n    children: [/*#__PURE__*/_jsxDEV(NFTHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: `NFT ${token_id}`,\n        src: `${url_image}`,\n        height: \"auto\",\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(NFTContent, {\n      children: /*#__PURE__*/_jsxDEV(NFTDetail, {\n        children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }, this), \" \", name, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Token :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 20\n          }, this), \" \", token_id, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"contract :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 20\n          }, this), \" \", addr, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 20\n          }, this), \" \", price, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 2\n  }, this);\n};\n_s(NFTCheckout, \"d3pCvO3u6RW3QwOX/JhFmGZwFPk=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = NFTCheckout;\nexport default NFTCheckout;\nvar _c;\n$RefreshReg$(_c, \"NFTCheckout\");","map":{"version":3,"names":["useSelector","getContractByID","getNameByCollectionID","shortenAddress","selectCollections","selectNFTtoBuy","NFTContainer","NFTHeader","NFTContent","NFTDetail","TextContainer","jsxDEV","_jsxDEV","NFTCheckout","_s","nftTobuy","collections","price","token_id","url_image","collection_id","ownership_id","name","contract","addr","children","alt","src","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/nft-checkout/nft-checkout.component.js"],"sourcesContent":["import {useSelector} from 'react-redux';\n\nimport {getContractByID, getNameByCollectionID, shortenAddress} from '../../redux/collection/collection.utils';\n\nimport {selectCollections} from '../../redux/collection/collection.selectors';\nimport { selectNFTtoBuy } from '../../redux/nft/nft.selectors';\n\nimport {NFTContainer, NFTHeader, NFTContent, NFTDetail, TextContainer} from './nft-checkout.styles';\n\nconst NFTCheckout = () => {\n\tconst nftTobuy = useSelector(selectNFTtoBuy);\n\tconst collections = useSelector(selectCollections)\n\tconst {price, token_id, url_image, collection_id, ownership_id} = nftTobuy;\n\tconst name = getNameByCollectionID(collections, collection_id);\n\tconst contract = getContractByID(collections, collection_id)\n\tconst addr = shortenAddress(contract); \n\treturn (\n\t<NFTContainer>\n\t\t<NFTHeader>\n\t\t\t<img\n\t\t\t\talt={`NFT ${token_id}`}\n\t\t\t\tsrc={`${url_image}`}\n\t\t\t\theight = 'auto'\n\t\t\t\twidth = '100%'\n\t\t\t/>\n\t\t</NFTHeader>\n\t\t<NFTContent>\n\t\t\t<NFTDetail>\n\t\t\t\t<TextContainer><strong>Name :</strong> {name}  </TextContainer>\n\t\t\t\t<TextContainer><strong>Token :</strong> {token_id}  </TextContainer>\n\t\t\t\t<TextContainer><strong>contract :</strong> {addr}  </TextContainer>\n\t\t\t\t<TextContainer><strong>Price :</strong> {price}  </TextContainer>\n\t\t\t</NFTDetail>\n\t\t</NFTContent>\n\t</NFTContainer>\n)};\n\nexport default NFTCheckout \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}