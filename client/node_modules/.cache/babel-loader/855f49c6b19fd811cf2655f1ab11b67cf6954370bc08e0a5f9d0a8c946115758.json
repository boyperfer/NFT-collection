{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/popup-checkout/popup-checkout.component.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { selectNFTtoBuy } from '../../redux/nft/nft.selectors';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { toggleBuying } from '../../redux/transaction/transaction.actions';\nimport CustomButton from '../custom-buttons/custom-button.component';\nimport { getContractByID } from '../../redux/collection/collection.utils';\nimport { selectCollections } from '../../redux/collection/collection.selectors';\nimport { PopupCheckoutContainer, TableContainer, PayContainer, TextContainer, TableWrab } from './popup-checkout.styles';\nimport { setBalance } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopupCheckout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const nftTobuy = useSelector(selectNFTtoBuy);\n  const currentUser = useSelector(selectCurrentUser);\n  const collections = useSelector(selectCollections);\n  const {\n    commission_rate,\n    trader_id,\n    balance,\n    ethereum_balance\n  } = currentUser;\n  const {\n    price,\n    nft_id,\n    collection_id,\n    ownership_id\n  } = nftTobuy;\n  const seller_id = ownership_id;\n  const contract_address = getContractByID(collections, collection_id);\n  const [ethereumPrice, setEthereumPrice] = useState('');\n  const usdCommission = (commission_rate * ethereumPrice).toFixed(2);\n  useEffect(() => {\n    const apiUrl = 'https://api.coinbase.com/v2/prices/ETH-USD/spot';\n    fetch(apiUrl).then(response => response.json()).then(({\n      data\n    }) => {\n      setEthereumPrice(data.amount);\n    }).catch(error => {\n      console.error('Error fetching Ethereum price:', error);\n    });\n  }, []);\n  const handleClick = commissionType => {\n    const commissionFee = commissionType == 'ETH' ? commission_rate : (commission_rate * ethereumPrice).toFixed(2);\n    if (commissionType == 'ETH' && ethereum_balance < price + commission_rate) {\n      alert('You do not have enough ethereum');\n    } else if (commissionType == 'USD' && (ethereum_balance < price || balance < (commission_rate * ethereumPrice).toFixed(2))) {\n      alert('You do not have enough ethereum or USD');\n    } else {\n      fetch(`http://localhost:3002/transaction/${trader_id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          commissionFee,\n          commissionType,\n          contract_address,\n          nft_id,\n          price,\n          seller_id\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          dispatch(toggleBuying());\n          if (commissionType == \"USD\") {\n            dispatch(setBalance(balance - commissionFee));\n          }\n          navigate('/');\n        } else {\n          alert('The transaction was failed');\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PopupCheckoutContainer, {\n    children: /*#__PURE__*/_jsxDEV(TableWrab, {\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: [/*#__PURE__*/_jsxDEV(PayContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Commission In Ethereum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Total is \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n            children: [\" \", (price + commission_rate).toFixed(4), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n            children: \" $0 USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: () => handleClick('ETH'),\n            children: \" Pay \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(PayContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Commission In USD \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Total is \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n            children: [price, \" ETH \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n            children: [\" $\", (commission_rate * ethereumPrice).toFixed(2), \" USD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: () => handleClick('USD'),\n            children: \" Pay \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        onClick: () => dispatch(toggleBuying()),\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n};\n_s(PopupCheckout, \"l2JpnFHKbVLwRi2gH/Js1sRnR6c=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n_c = PopupCheckout;\nexport default PopupCheckout;\nvar _c;\n$RefreshReg$(_c, \"PopupCheckout\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","useNavigate","selectNFTtoBuy","selectCurrentUser","toggleBuying","CustomButton","getContractByID","selectCollections","PopupCheckoutContainer","TableContainer","PayContainer","TextContainer","TableWrab","setBalance","jsxDEV","_jsxDEV","PopupCheckout","_s","dispatch","navigate","nftTobuy","currentUser","collections","commission_rate","trader_id","balance","ethereum_balance","price","nft_id","collection_id","ownership_id","seller_id","contract_address","ethereumPrice","setEthereumPrice","usdCommission","toFixed","apiUrl","fetch","then","response","json","data","amount","catch","error","console","handleClick","commissionType","commissionFee","alert","method","headers","body","JSON","stringify","success","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/popup-checkout/popup-checkout.component.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useNavigate} from 'react-router';\nimport {selectNFTtoBuy} from '../../redux/nft/nft.selectors';\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\nimport {toggleBuying} from '../../redux/transaction/transaction.actions';\nimport CustomButton from '../custom-buttons/custom-button.component';\nimport {getContractByID} from '../../redux/collection/collection.utils';\nimport {selectCollections} from '../../redux/collection/collection.selectors';\nimport {\n\tPopupCheckoutContainer,\n\tTableContainer,\n\tPayContainer,\n\tTextContainer,\n\tTableWrab,\n} from './popup-checkout.styles';\nimport {setBalance} from '../../redux/user/user.actions';\n\nconst PopupCheckout = () => {\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\n\tconst nftTobuy = useSelector(selectNFTtoBuy);\n\tconst currentUser = useSelector(selectCurrentUser);\n\tconst collections = useSelector(selectCollections);\n\n\tconst {commission_rate, trader_id, balance, ethereum_balance} = currentUser;\n\tconst {price, nft_id, collection_id, ownership_id} = nftTobuy;\n\tconst seller_id = ownership_id;\n\n\tconst contract_address = getContractByID(collections, collection_id);\n\n\tconst [ethereumPrice, setEthereumPrice] = useState('');\n\tconst usdCommission = (commission_rate * ethereumPrice).toFixed(2)\n\n\tuseEffect(() => {\n\t\tconst apiUrl = 'https://api.coinbase.com/v2/prices/ETH-USD/spot';\n\t\tfetch(apiUrl)\n\t\t\t.then(response => response.json())\n\t\t\t.then(({data}) => {\n\t\t\t\tsetEthereumPrice(data.amount);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error fetching Ethereum price:', error);\n\t\t\t});\n\t}, []);\n\n\tconst handleClick = commissionType => {\n\t\tconst commissionFee = commissionType == 'ETH' ? commission_rate : (commission_rate * ethereumPrice).toFixed(2);\n\t\tif (commissionType == 'ETH' && ethereum_balance < price + commission_rate) {\n\t\t\talert('You do not have enough ethereum');\n\t\t} else if (commissionType == 'USD' && (ethereum_balance < price || balance < (commission_rate * ethereumPrice).toFixed(2))) {\n\t\t\talert('You do not have enough ethereum or USD');\n\t\t} else {\n\t\t\tfetch(`http://localhost:3002/transaction/${trader_id}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({commissionFee, commissionType,\n\t\t\t\t contract_address, nft_id, price, seller_id}),\n\t\t\t})\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\tdispatch(toggleBuying());\n\t\t\t\t\t\tif (commissionType == \"USD\") {\n\t\t\t\t\t\t\tdispatch(setBalance(balance - (commissionFee)))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnavigate('/');\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert('The transaction was failed');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<PopupCheckoutContainer>\n\t\t\t<TableWrab>\n\t\t\t\t<TableContainer>\n\t\t\t\t\t<PayContainer>\n\t\t\t\t\t\t<h4>Commission In Ethereum</h4>\n\t\t\t\t\t\t<h4>Total is </h4>\n\t\t\t\t\t\t<TextContainer> {(price + commission_rate).toFixed(4)} ETH</TextContainer>\n\t\t\t\t\t\t<TextContainer> $0 USD</TextContainer>\n\t\t\t\t\t\t<CustomButton onClick={() => handleClick('ETH')}> Pay </CustomButton>\n\t\t\t\t\t</PayContainer>\n\t\t\t\t\t<PayContainer>\n\t\t\t\t\t\t<h4>Commission In USD </h4>\n\t\t\t\t\t\t<h4>Total is </h4>\n\t\t\t\t\t\t<TextContainer>{price} ETH </TextContainer>\n\t\t\t\t\t\t<TextContainer> ${(commission_rate * ethereumPrice).toFixed(2)} USD</TextContainer>\n\t\t\t\t\t\t<CustomButton onClick={() => handleClick('USD')}> Pay </CustomButton>\n\t\t\t\t\t</PayContainer>\n\t\t\t\t</TableContainer>\n\t\t\t\t<CustomButton onClick={() => dispatch(toggleBuying())}> Cancel </CustomButton>\n\t\t\t</TableWrab>\n\t\t</PopupCheckoutContainer>\n\t);\n};\n\nexport default PopupCheckout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}