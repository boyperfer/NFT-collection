{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/deposit-bank/deposit-bank.component.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { fetchTransactionStart } from '../../redux/transaction/transaction.actions';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-buttons/custom-button.component';\nimport { TitleContainer, ButtonsContainer, DepositContainer } from './deposit-bank.styles';\nimport { selectTransactions } from '../../redux/transaction/transaction.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepositBank = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTransactionStart());\n  }, [dispatch]);\n  const currentUser = useSelector(selectCurrentUser);\n  const {\n    trader_id\n  } = currentUser;\n  let date = new Date();\n  date = date.toISOString().split('T')[0];\n  const paymentType = 'Bank Transfer';\n  const [payment, setPayment] = useState({\n    amount: '',\n    paymentAddress: ''\n  });\n  const {\n    amount,\n    paymentAddress\n  } = payment;\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPayment({\n      ...payment,\n      [name]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event, 1);\n    // Send login request to the server\n    fetch(`http://localhost:3002/depositBank/${trader_id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        paymentAddress,\n        amount,\n        date,\n        paymentType\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      console.log(data.result[0].trader_id);\n      // Handle the login response accordingly\n      // For simplicity, just logging the response to the console\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DepositContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: \"Deposit by Bank transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        label: \"Payment Address\",\n        name: \"paymentAddress\",\n        type: \"text\",\n        value: paymentAddress,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        label: \"Amount\",\n        name: \"amount\",\n        type: \"text\",\n        value: amount,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n_s(DepositBank, \"wm9A2kYQYc+upR2PiDZ74wfS82s=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DepositBank;\nexport default DepositBank;\nvar _c;\n$RefreshReg$(_c, \"DepositBank\");","map":{"version":3,"names":["useState","useEffect","axios","useDispatch","useSelector","selectCurrentUser","fetchTransactionStart","FormInput","CustomButton","TitleContainer","ButtonsContainer","DepositContainer","selectTransactions","jsxDEV","_jsxDEV","DepositBank","_s","dispatch","currentUser","trader_id","date","Date","toISOString","split","paymentType","payment","setPayment","amount","paymentAddress","handleChange","event","name","value","target","handleSubmit","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","result","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","required","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/nft/client/src/components/deposit-bank/deposit-bank.component.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\n\nimport {fetchTransactionStart} from '../../redux/transaction/transaction.actions';\n\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-buttons/custom-button.component';\n\nimport {TitleContainer, ButtonsContainer, DepositContainer} from './deposit-bank.styles';\nimport {selectTransactions} from '../../redux/transaction/transaction.selectors';\n\nconst DepositBank = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchTransactionStart())\n\t}, [dispatch]);\n\n\t\n\tconst currentUser = useSelector(selectCurrentUser);\n\tconst {trader_id} = currentUser;\n\n\tlet date = new Date();\n\tdate = date.toISOString().split('T')[0];\n\tconst paymentType = 'Bank Transfer'\n\tconst [payment, setPayment] = useState({\n\t\tamount: '',\n\t\tpaymentAddress: '',\n\t});\n\n\tconst {amount, paymentAddress} = payment;\n\n\tconst handleChange = event => {\n\t\tconst {name, value} = event.target;\n\t\tsetPayment({...payment, [name]: value});\n\t};\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tconsole.log(event, 1);\n\t\t// Send login request to the server\n\t\tfetch(`http://localhost:3002/depositBank/${trader_id}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({paymentAddress, amount, date, paymentType}),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data)\n\t\t\t\tconsole.log(data.result[0].trader_id);\n\t\t\t\t// Handle the login response accordingly\n\t\t\t\t// For simplicity, just logging the response to the console\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t};\n\treturn (\n\t\t<DepositContainer>\n\t\t\t<TitleContainer>\n\t\t\t\tDeposit by Bank transfer\n\t\t\t</TitleContainer>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel='Payment Address'\n\t\t\t\t\tname='paymentAddress'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={paymentAddress}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tlabel='Amount'\n\t\t\t\t\tname='amount'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={amount}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<ButtonsContainer>\n\t\t\t\t\t<CustomButton type='submit'>Submit</CustomButton>\n\t\t\t\t</ButtonsContainer>\n\t\t\t</form>\n\t\t</DepositContainer>\n\t);\n};\n\nexport default DepositBank;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}