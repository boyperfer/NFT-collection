{"ast":null,"code":"var _jsxFileName = \"/home/boyperfer/Desktop/UTD/cs-6360/NFT-collection/client/src/pages/collection/collection.component.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredNFTs, selectIsFetchingNFTs, selectNFTs } from '../../redux/nft/nft.selectors';\nimport { selectCollections } from '../../redux/collection/collection.selectors';\nimport { filterNFT } from '../../redux/nft/nft.actions';\nimport { getCollectionIDByName } from '../../redux/collection/collection.utils';\nimport CardList from '../../components/card-list/card-list.component';\nimport SearchBox from '../../components/search-box/search-box.component';\nimport { CollectionContainer } from './collection.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const collectionName = useParams().collectionName;\n  const collections = useSelector(selectCollections);\n  const selectedNFTs = useSelector(selectFilteredNFTs);\n  const isFetching = useSelector(selectIsFetchingNFTs);\n  const nfts = useSelector(selectNFTs);\n  const [searchField, setSearchField] = useState('');\n  const [filteredNFTs, setFilterNFTs] = useState(selectedNFTs);\n  useEffect(() => {\n    dispatch(filterNFT(getCollectionIDByName(collections, collectionName)));\n  }, [nfts, dispatch]);\n  console.log(selectedNFTs);\n  useEffect(() => {\n    const newFilteredNFTsByTokenID = selectedNFTs.filter(nft => nft.token_id.toString().includes(searchField));\n    setFilterNFTs(newFilteredNFTsByTokenID);\n  }, [selectedNFTs, searchField]);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  return /*#__PURE__*/_jsxDEV(CollectionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChangeHandler: onSearchChange,\n      placeholder: \"search token id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      nfts: filteredNFTs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(CollectionPage, \"Nonb0HUPKuc3UXt5UcJTWqc47pU=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector, useSelector];\n});\n_c = CollectionPage;\nexport default CollectionPage;\nvar _c;\n$RefreshReg$(_c, \"CollectionPage\");","map":{"version":3,"names":["useEffect","useState","useParams","useSelector","useDispatch","selectFilteredNFTs","selectIsFetchingNFTs","selectNFTs","selectCollections","filterNFT","getCollectionIDByName","CardList","SearchBox","CollectionContainer","jsxDEV","_jsxDEV","CollectionPage","_s","dispatch","collectionName","collections","selectedNFTs","isFetching","nfts","searchField","setSearchField","filteredNFTs","setFilterNFTs","console","log","newFilteredNFTsByTokenID","filter","nft","token_id","toString","includes","onSearchChange","event","searchFieldString","target","value","toLocaleLowerCase","children","className","onChangeHandler","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/boyperfer/Desktop/UTD/cs-6360/NFT-collection/client/src/pages/collection/collection.component.js"],"sourcesContent":["import {useEffect, useState} from 'react';\n\nimport {useParams} from 'react-router-dom';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {selectFilteredNFTs, selectIsFetchingNFTs, selectNFTs} from '../../redux/nft/nft.selectors';\nimport {selectCollections} from '../../redux/collection/collection.selectors';\n\nimport { filterNFT } from '../../redux/nft/nft.actions';\n\nimport {getCollectionIDByName} from '../../redux/collection/collection.utils';\n\nimport CardList from '../../components/card-list/card-list.component';\nimport SearchBox from '../../components/search-box/search-box.component';\n\nimport { CollectionContainer } from './collection.styles';\nconst CollectionPage = () => {\n\tconst dispatch = useDispatch();\n\tconst collectionName = useParams().collectionName;\n\n\tconst collections = useSelector(selectCollections);\n\tconst selectedNFTs = useSelector(selectFilteredNFTs);\n\tconst isFetching = useSelector(selectIsFetchingNFTs);\n\n\tconst nfts = useSelector(selectNFTs);\n\n\tconst [searchField, setSearchField] = useState('');\n\n\tconst [filteredNFTs, setFilterNFTs] = useState(selectedNFTs);\n\n\tuseEffect(() => {\n\t\tdispatch(filterNFT(getCollectionIDByName(collections, collectionName)))\n\t}, [nfts, dispatch]);\n\n\tconsole.log(selectedNFTs)\n\n\tuseEffect(() => {\n\t\tconst newFilteredNFTsByTokenID = selectedNFTs.filter(nft => nft.token_id.toString().includes(searchField));\n\n\t\tsetFilterNFTs(newFilteredNFTsByTokenID);\n\t}, [selectedNFTs, searchField]);\n\n\tconst onSearchChange = event => {\n\t\tconst searchFieldString = event.target.value.toLocaleLowerCase();\n\t\tsetSearchField(searchFieldString);\n\t};\n\n\treturn (\n\t\t<CollectionContainer>\n\t\t\t<SearchBox\n\t\t\t\tclassName='monsters-search-box'\n\t\t\t\tonChangeHandler={onSearchChange}\n\t\t\t\tplaceholder='search token id'\n\t\t\t/>\n\t\t\t<CardList nfts={filteredNFTs} />\n\t\t</CollectionContainer>\n\t);\n};\n\nexport default CollectionPage;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,SAAQC,SAAS,QAAO,kBAAkB;AAE1C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AAEpD,SAAQC,kBAAkB,EAAEC,oBAAoB,EAAEC,UAAU,QAAO,+BAA+B;AAClG,SAAQC,iBAAiB,QAAO,6CAA6C;AAE7E,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,SAAQC,qBAAqB,QAAO,yCAAyC;AAE7E,OAAOC,QAAQ,MAAM,gDAAgD;AACrE,OAAOC,SAAS,MAAM,kDAAkD;AAExE,SAASC,mBAAmB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,cAAc,GAAGjB,SAAS,CAAC,CAAC,CAACiB,cAAc;EAEjD,MAAMC,WAAW,GAAGjB,WAAW,CAACK,iBAAiB,CAAC;EAClD,MAAMa,YAAY,GAAGlB,WAAW,CAACE,kBAAkB,CAAC;EACpD,MAAMiB,UAAU,GAAGnB,WAAW,CAACG,oBAAoB,CAAC;EAEpD,MAAMiB,IAAI,GAAGpB,WAAW,CAACI,UAAU,CAAC;EAEpC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAACyB,YAAY,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAACoB,YAAY,CAAC;EAE5DrB,SAAS,CAAC,MAAM;IACfkB,QAAQ,CAACT,SAAS,CAACC,qBAAqB,CAACU,WAAW,EAAED,cAAc,CAAC,CAAC,CAAC;EACxE,CAAC,EAAE,CAACI,IAAI,EAAEL,QAAQ,CAAC,CAAC;EAEpBU,OAAO,CAACC,GAAG,CAACR,YAAY,CAAC;EAEzBrB,SAAS,CAAC,MAAM;IACf,MAAM8B,wBAAwB,GAAGT,YAAY,CAACU,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAACX,WAAW,CAAC,CAAC;IAE1GG,aAAa,CAACG,wBAAwB,CAAC;EACxC,CAAC,EAAE,CAACT,YAAY,EAAEG,WAAW,CAAC,CAAC;EAE/B,MAAMY,cAAc,GAAGC,KAAK,IAAI;IAC/B,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,CAAC,CAAC;IAChEhB,cAAc,CAACa,iBAAiB,CAAC;EAClC,CAAC;EAED,oBACCvB,OAAA,CAACF,mBAAmB;IAAA6B,QAAA,gBACnB3B,OAAA,CAACH,SAAS;MACT+B,SAAS,EAAC,qBAAqB;MAC/BC,eAAe,EAAER,cAAe;MAChCS,WAAW,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFlC,OAAA,CAACJ,QAAQ;MAACY,IAAI,EAAEG;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAExB,CAAC;AAAChC,EAAA,CAzCID,cAAc;EAAA,QACFZ,WAAW,EACLF,SAAS,EAEZC,WAAW,EACVA,WAAW,EACbA,WAAW,EAEjBA,WAAW;AAAA;AAAA+C,EAAA,GARnBlC,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}